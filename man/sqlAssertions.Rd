% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sqlAssertions.R
\name{sqlPattern}
\alias{sqlChar}
\alias{sqlChars}
\alias{sqlComma}
\alias{sqlEsc}
\alias{sqlInNums}
\alias{sqlInStrs}
\alias{sqlName}
\alias{sqlNames}
\alias{sqlNum}
\alias{sqlNums}
\alias{sqlParan}
\alias{sqlPattern}
\title{SQL Assertions and Formats}
\usage{
sqlPattern(x, pattern, negate = TRUE)

sqlChar(x)

sqlChars(x)

sqlNum(x)

sqlNums(x)

sqlParan(x, assert = identity)

sqlComma(x, assert = identity)

sqlEsc(x, assert = identity, with = "`")

sqlName(x)

sqlNames(x)

sqlInNums(x)

sqlInStrs(x)
}
\arguments{
\item{x}{(ANY) input}

\item{pattern}{(character) a regular expression used in \link{grepl}}

\item{negate}{(logical) if TRUE then an error is thrown if at least one of
the elements in x match pattern. If FALSE all elements in x must match the
pattern.}

\item{assert}{(function) an assertion fuction}

\item{with}{(character)}
}
\description{
These functions can be used to format and check the input of queries.
}
\examples{
# Will format and check:
sqlInStrs(letters[1:2])
sqlInNums(1:2)
sqlNames(letters[1:2])
sqlNames("a")

# Only check:
sqlNum(1)
sqlNums(1:2)
sqlChar("a")
sqlChars(letters[1:2])
}

