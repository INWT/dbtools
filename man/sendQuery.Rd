% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/sendQuery.R
\docType{methods}
\name{sendQuery}
\alias{sendQuery}
\alias{sendQuery,Credentials,SingleQueryList-method}
\alias{sendQuery,Credentials,character-method}
\alias{sendQuery,DBIConnection,SingleQuery-method}
\alias{sendQuery,MySQLConnection,SingleQuery-method}
\title{Send query to database and fetch result}
\usage{
sendQuery(db, query, ...)

\S4method{sendQuery}{Credentials,character}(db, query, ...)

\S4method{sendQuery}{Credentials,SingleQueryList}(db, query, ...)

\S4method{sendQuery}{DBIConnection,SingleQuery}(db, query, ...)

\S4method{sendQuery}{MySQLConnection,SingleQuery}(db, query, ...)
}
\arguments{
\item{db}{one in:
\cr (\link{Credentials}) the credentials to get a connection to a database.
\cr (DBIConnection) \link[DBI]{DBIConnection-class}
\cr (MySQLConnection) \link[RMySQL]{MySQLConnection-class}}

\item{query}{one in:
\cr (character, length >= 1) a query
\cr (SingleQuery | SingleQeuryList) \link{SingleQuery-class} is mostly used
internally.}

\item{...}{one in:
  \cr for signature (Credentials, character | SingleQueryList) arguments are
  passed to \code{reTry}
  \cr else ignored}
}
\description{
This functions sends a query to a database and fetches the result.
}
\examples{
## For an example database:
library("RSQLite")
con <- dbConnect(SQLite(), "example.db")
data(USArrests)
dbWriteTable(con, "USArrests", USArrests)
dbDisconnect(con)

## Simple Query
cred <- Credentials(drv = RSQLite::SQLite, dbname = "example.db")
dat <- sendQuery(cred, "SELECT * FROM USArrests;")

## Multiple Similar Queries
queryFun <- function(state) {
  paste0("SELECT * FROM USArrests WHERE row_names = '", state, "';")
}

sendQuery(cred, queryFun(dat$row_names))

## For the Paranoid
### be a bit more cautious with connections
dat <- sendQuery(
  cred,
  "SELECT * FROM USArrest;", # wrong name for illustration
  tries = 2,
  intSleep = 1
)
}

